<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xbgy.system.dao.AccountMapper">
    <cache readOnly="true"/>
    
	<resultMap id="BaseResultMap" type="com.xbgy.system.model.Account">
		<id column="accountId" property="accountId" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="fullName" property="fullName" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap type="com.xbgy.system.model.Account" id="AccountWithRole"
		extends="BaseResultMap">
		<collection property="roleSet" ofType="com.ssmm.model.Role">
			<id column="roleId" property="roleId" jdbcType="INTEGER" />
		    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
		    <result column="roleDesc" property="roleDesc" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<sql id="Base_Column_List">
		id, username, password, age
	</sql>
	<select id="getAccountByUsername" resultMap="AccountWithRole"
		parameterType="java.lang.String">
		select
			a.accountId,a.username,a.password,a.fullName,
			r.roleId,r.roleName,r.roleDesc
		from account a,account_role ar,role r
		where a.accountId = ar.aid and r.roleId = ar.rid
		and a.username = #{username,jdbcType=VARCHAR}
	</select>
</mapper>